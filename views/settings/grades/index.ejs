<%- include('../../includes/header'); %>
<link rel="stylesheet" href="/css/buttons.css">
<link rel="stylesheet" href="/css/chosen-required.css">
</head>

<body>
	<!-- Modal Structure -->
	<div id="modal1" class="modal">
		<div class="modal-content">
			<h4>Confirmation</h4>
			<p>Are you sure?</p>
		</div>
		<div class="modal-footer" id="del-confirm-modal">

		</div>
	</div>
	<%- include('../../admin/partials/side-nav'); %>
	<%- include('./edit.ejs'); %>
	<!-- Modal Structure -->
	<div style="padding-left: 1%;">
		<a class="btn blue lighten-2" style="margin-top: 7px;" href="/settings/grades/add" class="btn btn-secondary">New
			Grade</a>
		<% var d = JSON.stringify(grades) %>
		<table id="grades_table" class="display" style="width:100%">
			<thead>
				<tr>
					<th></th>
					<th>ID</th>
					<th>Grade</th>
					<th>Min Salary</th>
					<th>Max Salary</th>
					<th>Actions</th>
				</tr>
			</thead>
		</table>
	</div>

	<script>
		var editor;
		$(document).ready(function () {
			$(".chosen-select").chosen({
				no_results_text: "Oops, nothing found!",
				width: "95%",
				search: true
			})
			var elems = document.querySelectorAll('.modal');
			var instances = M.Modal.init(elems, {
				dismissible: true,
				outDuration: 300
			});
			var dataSet = '<%- d %>'
			console.log('dataSet for grades', dataSet)
			var table = $('#grades_table').DataTable({
				data: JSON.parse(dataSet),
				select: true,
				"columns": [{
						"className": 'details-control',
						"orderable": true,
						"search": true,
						"data": null,
						"defaultContent": ''
					},
					{
						data: "id"
					},
					{
						data: "grade"
					},
					{
						data: "min_salary",
						// render: $.fn.dataTable.render.number(',', '.', 0, '$')
					},
					{
						data: "max_salary"
						// render: $.fn.dataTable.render.number(',', '.', 0, '$')
					},
					
					{
						data: null,
						className: "center",
						render: function (data, type, row) {
							console.log('type:', '<%- navigation.role %>')
							return '<%- navigation.role %>' === 'Admin' ? `<a class="btn-floating waves-effect waves-light modal-trigger" id="grade-modal" href="#grade-edit-modal"><i
								class="material-icons">edit</i></a>
								<a class="btn-floating waves-effect waves-light red modal-trigger" href="#modal1"><i
								class="material-icons">delete</i></a>`
								: ''
						}
					}
				],
				"order": [
					[1, 'asc']
				]
			});
			// Add event listener for opening and closing details
			$('#grades_table tbody').on('click', 'td.details-control', function () {
				var tr = $(this).closest('tr');
				var row = table.row(tr);

				if (row.child.isShown()) {
					// This row is already open - close it
					row.child.hide();
					tr.removeClass('shown');
				} else {
					// Open this row
					row.child(format(row.data())).show();
					tr.addClass('shown');
				}
			});
			$('#grades_table tbody').on('click', 'a.modal-trigger', function () {
				var tr = $(this).closest('tr');
				var row = table.row(tr);
				// modal population.
				// <a href="#!" class="modal-close waves-effect waves-green btn-flat">Agree</a>
				document.querySelector('#del-confirm-modal').innerHTML =
					`<a href="/settings/grade/delete/${row.data().id}" class="modal-close waves-effect waves-green btn-flat" id='${row.data().id}'>Agree</a>`;
			})
			$('#grades_table tbody').on('click', '#grade-modal', function () {
				var rowData = table.row($(this).closest('tr')).data()
				console.log('rowData', rowData)
				$('#grade_short_form').val(rowData.grade)
				$('#max_salary').val(rowData.max_salary)
				$('#min_salary').val(rowData.min_salary)
				$('#grade_id').val(rowData.id)
				$('#oldRecord').val(JSON.stringify(rowData))
				$('#selected_allowances').val(rowData.allowances.map(key => key.id)).trigger(
					'chosen:updated');
				$('#selected_funds_edit').val(rowData.funds.map(key => key.id)).trigger('chosen:updated');
			})
		})

		/* Formatting function for row details - modify as you need */
		function format(d) {
			console.log('d', d)
			let str = '<h5><b>Allowances</b></h5><table cellpadding="5" cellspacing="0" border="0"">'
			str = str + '<tr>'
			str = str + '<th> Name </th>'
			str = str + '<th> Amount </th>'
			str = str + '</tr>'
			d.allowances.forEach(element => {
				str = str + '<tr>'
				str = str + '<td>' + element.name + '</td>'
				str = str + '<td>' + element.amount + '</td>'
				str = str + '</tr>'
			});
			str = str + '</table>'
			str = str + '<h5><b>Funds</b></h5><table cellpadding="5" cellspacing="0" border="0"">'
			str = str + '<tr>'
			str = str + '<th> Name </th>'
			str = str + '<th> Amount </th>'
			str = str + '</tr>'
			d.funds.forEach(element => {
				str = str + '<tr>'
				str = str + '<td>' + element.name + '</td>'
				str = str + '<td>' + element.amount + '</td>'
				str = str + '</tr>'
			});
			str = str + '</table>'
			return str
		}
	</script>